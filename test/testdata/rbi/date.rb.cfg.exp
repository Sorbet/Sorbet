digraph "date.rb" {
subgraph "cluster_::A#foo" {
    label = "::A#foo";
    color = blue;
    "bb::A#foo_0" [shape = invhouse];
    "bb::A#foo_1" [shape = parallelogram];

    "bb::A#foo_0" [
        label = "block[id=0]()\l<U t>: Time = load_arg(A#foo#t)\l<U <statTemp>>$4: DateTime = <U t>: Time.<U to_datetime>()\l<U <statTemp>>$3: Date = <U <statTemp>>$4: DateTime.<U to_date>()\l<U <returnMethodTemp>>$2: Time = <U <statTemp>>$3: Date.<U to_time>()\l<U <finalReturn>>: T.noreturn = return <U <returnMethodTemp>>$2: Time\l<unconditional>\l"
    ];

    "bb::A#foo_0" -> "bb::A#foo_1" [style="bold"];
    "bb::A#foo_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::A#foo_1" -> "bb::A#foo_1" [style="bold"];
}

subgraph "cluster_::<Class:A>#<static-init>" {
    label = "::<Class:A>#<static-init>";
    color = blue;
    "bb::<Class:A>#<static-init>_0" [shape = invhouse];
    "bb::<Class:A>#<static-init>_1" [shape = parallelogram];

    "bb::<Class:A>#<static-init>_0" [
        label = "block[id=0]()\l<U <statTemp>>$3: T.class_of(A) = self\l<U <block-pre-call-temp>>$4: Sorbet::Private::Static::Void = <U <statTemp>>$3: T.class_of(A).<U sig>()\l<unconditional>\l"
    ];

    "bb::<Class:A>#<static-init>_0" -> "bb::<Class:A>#<static-init>_2" [style="bold"];
    "bb::<Class:A>#<static-init>_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::<Class:A>#<static-init>_1" -> "bb::<Class:A>#<static-init>_1" [style="bold"];
    "bb::<Class:A>#<static-init>_2" [
        label = "block[id=2]()\louterLoops: 1\l<U <block-call>>: NilClass\l"
    ];

    "bb::<Class:A>#<static-init>_2" -> "bb::<Class:A>#<static-init>_4" [style="bold"];
    "bb::<Class:A>#<static-init>_2" -> "bb::<Class:A>#<static-init>_3" [style="tapered"];

    "bb::<Class:A>#<static-init>_3" [
        label = "block[id=3]()\l<U <returnMethodTemp>>$2: Sorbet::Private::Static::Void = Solve<::<Class:A>#<block>>\l<U <finalReturn>>: T.noreturn = return <U <returnMethodTemp>>$2: Sorbet::Private::Static::Void\l<unconditional>\l"
    ];

    "bb::<Class:A>#<static-init>_3" -> "bb::<Class:A>#<static-init>_1" [style="bold"];
    "bb::<Class:A>#<static-init>_4" [
        label = "block[id=4]()\louterLoops: 1\l<U <statTemp>>$9: Sorbet::Private::Builder = self\l<U <hashTemp>>$11: Symbol(:\"t\") = :\"t\"\l<U <hashTemp>>$12: T.class_of(Time) = alias <C <U Time>>\l<U <magic>>$13: <Magic> = alias <C <U <Magic>>>\l<U <statTemp>>$10: {<U t>: T.class_of(Time)} = <U <magic>>$13: <Magic>.<U <build-hash>>(<U <hashTemp>>$11: Symbol(:\"t\"), <U <hashTemp>>$12: T.class_of(Time))\l<U <statTemp>>$8: Sorbet::Private::Builder = <U <statTemp>>$9: Sorbet::Private::Builder.<U params>(<U <statTemp>>$10: {<U t>: T.class_of(Time)})\l<U <statTemp>>$14: T.class_of(Time) = alias <C <U Time>>\l<U <blockReturnTemp>>$7: Sorbet::Private::Builder = <U <statTemp>>$8: Sorbet::Private::Builder.<U returns>(<U <statTemp>>$14: T.class_of(Time))\l<U <blockReturnTemp>>$15: T.noreturn = blockreturn<::<Class:A>#<block>> <U <blockReturnTemp>>$7: Sorbet::Private::Builder\l<unconditional>\l"
    ];

    "bb::<Class:A>#<static-init>_4" -> "bb::<Class:A>#<static-init>_2" [style="bold"];
}

}

