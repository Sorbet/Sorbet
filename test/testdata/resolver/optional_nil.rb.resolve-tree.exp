begin
  ::Sorbet::Private::Static.<U keep_for_ide>(::Test)
  class ::Test<<C <U Test>>> < (::<todo sym>)
    <emptyTree>

    <emptyTree>

    <emptyTree>

    <emptyTree>

    <emptyTree>

    def <U foo><<U foo>>(x, <blk>)
      begin
        T.<U let>(nil, String)
        <U x>
      end
    end

    def <U bar><<U bar>>(y, <blk>)
      begin
        T.<U let>(nil, String)
        <U y>
      end
    end

    def <U qux><<U qux>>(z, <blk>)
      begin
        T.<U let>("", String)
        <U z>
      end
    end

    def <U baz><<U baz>>(w, <blk>)
      begin
        T.<U let>("", String)
        <U w>
      end
    end

    def self.<U <static-init>><<U <static-init>>>(<blk>)
      begin
        <U <self>>.<U sig>() do ||
          <U <self>>.<U params>({:"x" => ::String}).<U returns>(::String)
        end
        <U <self>>.<U sig>() do ||
          <U <self>>.<U params>({:"y" => ::String}).<U returns>(::String)
        end
        <U <self>>.<U sig>() do ||
          <U <self>>.<U params>({:"z" => ::String}).<U returns>(::String)
        end
        <U <self>>.<U sig>() do ||
          <U <self>>.<U params>({:"w" => ::String}).<U returns>(::String)
        end
        <emptyTree>
      end
    end
  end
  <emptyTree>
end
