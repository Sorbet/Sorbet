class <emptyTree><<C <root>>> < ()
  begin
    ::Sorbet::Private::Static.keep_for_ide(::Other)
    class ::Other<<C Other>> < (::<todo sym>)    end
  end

  begin
    ::Sorbet::Private::Static.keep_for_ide(::Test)
    ::Sorbet::Private::Static.keep_for_ide(::Other)
    class ::Test<<C Test>> < (::Other, ::Test::Mixin, ::Test::Other)
      begin
        ::Sorbet::Private::Static.keep_for_ide(::Test::Mixin)
        module ::Test::Mixin<<C Mixin>> < ()        end
      end

      begin
        ::Sorbet::Private::Static.keep_for_ide(::Test::Other)
        module ::Test::Other<<C Other>> < ()        end
      end

      ::Sorbet::Private::Static.keep_for_ide(::Test::Mixin)

      ::Sorbet::Private::Static.keep_for_ide(::Test::Other)
    end
  end

  begin
    ::Sorbet::Private::Static.keep_for_typechecking(::Test::Mixin)
    T.assert_type!(::Test.new(), Test::Mixin)
  end

  begin
    ::Sorbet::Private::Static.keep_for_typechecking(::Test::Other)
    T.assert_type!(::Test.new(), Test::Other)
  end

  begin
    ::Sorbet::Private::Static.keep_for_typechecking(::Other)
    T.assert_type!(::Test.new(), Other)
  end
end
