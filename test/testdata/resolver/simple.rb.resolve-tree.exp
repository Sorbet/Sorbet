class <emptyTree><<C <root>>> < ()
  begin
    ::Sorbet::Private::Static.keep_for_ide(::Outer1)
    class ::Outer1<<C Outer1>> < (::<todo sym>)    end
  end

  begin
    ::Sorbet::Private::Static.keep_for_ide(::Outer2)
    class ::Outer2<<C Outer2>> < (::<todo sym>)
      begin
        ::Sorbet::Private::Static.keep_for_ide(::Outer2::C)
        class ::Outer2::C<<C C>> < (::<todo sym>)        end
      end

      begin
        ::Sorbet::Private::Static.keep_for_ide(::Outer2::Inner1)
        class ::Outer2::Inner1<<C Inner1>> < (::<todo sym>)
          begin
            ::Sorbet::Private::Static.keep_for_ide(::Outer2::Inner1::A)
            class ::Outer2::Inner1::A<<C A>> < (::<todo sym>)            end
          end

          begin
            ::Sorbet::Private::Static.keep_for_ide(::Outer2::Inner1::Inner2)
            class ::Outer2::Inner1::Inner2<<C Inner2>> < (::<todo sym>)
              ::Outer2::Inner1::A

              ::Outer2::Inner1

              ::Outer2::Inner1::Inner2

              ::Outer1
            end
          end
        end
      end

      begin
        ::Sorbet::Private::Static.keep_for_ide(::Outer2::Inner1::Inner2)
        class ::Outer2::Inner1::Inner2<<C Inner2>> < (::<todo sym>)
          ::Outer2::C

          Unresolved: <emptyTree>::<C A>
        end
      end

      begin
        ::Sorbet::Private::Static.keep_for_ide(::Outer2::Other)
        ::Sorbet::Private::Static.keep_for_ide(::Outer2::Inner1::Inner2)
        class ::Outer2::Other<<C Other>> < (::Outer2::Inner1::Inner2)        end
      end
    end
  end
end
