begin
  class <emptyTree><<C <U <root>>>> < ()
    def self.<U <static-init>><<N <U <static-init>> $3>>(<blk>)
      begin
        begin
          ::RubyTyper.<U keep_for_ide>(::Outer1)
          <emptyTree>
        end
        begin
          ::RubyTyper.<U keep_for_ide>(::Outer2)
          <emptyTree>
        end
        <emptyTree>
      end
    end
  end
  class ::Outer1<<C <U Outer1>>> < (::<todo sym>)  end
  class ::Outer2<<C <U Outer2>>> < (::<todo sym>)
    def self.<U <static-init>><<U <static-init>>>(<blk>)
      begin
        begin
          ::RubyTyper.<U keep_for_ide>(::Outer2::C)
          <emptyTree>
        end
        begin
          ::RubyTyper.<U keep_for_ide>(::Outer2::Inner1)
          <emptyTree>
        end
        begin
          ::RubyTyper.<U keep_for_ide>(::Outer2::Inner1::Inner2)
          <emptyTree>
        end
        begin
          ::RubyTyper.<U keep_for_ide>(::Outer2::Other)
          ::RubyTyper.<U keep_for_ide>(::Outer2::Inner1::Inner2)
          <emptyTree>
        end
        <emptyTree>
      end
    end
  end
  class ::Outer2::C<<C <U C>>> < (::<todo sym>)  end
  class ::Outer2::Inner1<<C <U Inner1>>> < (::<todo sym>)
    def self.<U <static-init>><<U <static-init>>>(<blk>)
      begin
        begin
          ::RubyTyper.<U keep_for_ide>(::Outer2::Inner1::A)
          <emptyTree>
        end
        begin
          ::RubyTyper.<U keep_for_ide>(::Outer2::Inner1::Inner2)
          <emptyTree>
        end
        <emptyTree>
      end
    end
  end
  class ::Outer2::Inner1::A<<C <U A>>> < (::<todo sym>)  end
  class ::Outer2::Inner1::Inner2<<C <U Inner2>>> < (::<todo sym>)
    def self.<U <static-init>><<U <static-init>>>(<blk>)
      begin
        ::Outer2::Inner1::A
        ::Outer2::Inner1
        ::Outer2::Inner1::Inner2
        ::Outer1
        <emptyTree>
      end
    end
  end
  class ::Outer2::Inner1::Inner2<<C <U Inner2>>> < (::<todo sym>)
    def self.<U <static-init>><<U <static-init>>>(<blk>)
      begin
        ::Outer2::C
        Unresolved: <emptyTree>::<C <U A>>
        <emptyTree>
      end
    end
  end
  class ::Outer2::Other<<C <U Other>>> < (::Outer2::Inner1::Inner2)  end
  <emptyTree>
end
