begin
  ::Sorbet::Private::Static.keep_for_ide(::Destructure)
  class ::Destructure<<C Destructure>> < (::<todo sym>)
    def f<f>((x,y), z, <blk>)
      begin
        begin
          <assignTemp>$3 = ::<Magic>.<expand-splat>(<destructure>$2, 2, 0)
          x = <assignTemp>$3.[](0)
          y = <assignTemp>$3.[](1)
          <assignTemp>$3
        end
        begin
          x.+(y)
          <self>.lambda() do |<destructure>$4$1|
            begin
              begin
                <assignTemp>$5$1 = ::<Magic>.<expand-splat>(<destructure>$4$1, 2, 0)
                a$1 = <assignTemp>$5$1.[](0)
                b$1 = <assignTemp>$5$1.[](1)
                <assignTemp>$5$1
              end
              <emptyTree>
            end
          end
        end
      end
    end
  end
end
