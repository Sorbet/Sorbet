class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C Inexact><<C <todo sym>>> < (<emptyTree>::<C T>::<C InexactStruct>)
    ::T::Sig::WithoutRuntime.sig() do ||
      <self>.params({}).returns(<emptyTree>::<C Integer>)
    end

    def foo<<C <todo sym>>>(&<blk>)
      ::Kernel.raise("Sorbet rewriter pass partially unimplemented")
    end

    ::T::Sig::WithoutRuntime.sig() do ||
      <self>.params({:"arg0" => <emptyTree>::<C Integer>}).returns(<emptyTree>::<C Integer>)
    end

    def foo=<<C <todo sym>>>(arg0, &<blk>)
      ::Kernel.raise("Sorbet rewriter pass partially unimplemented")
    end

    ::T::Sig::WithoutRuntime.sig() do ||
      <self>.params({}).returns(<emptyTree>::<C String>)
    end

    def bar<<C <todo sym>>>(&<blk>)
      ::Kernel.raise("Sorbet rewriter pass partially unimplemented")
    end

    ::T::Sig::WithoutRuntime.sig() do ||
      <self>.params({:"arg0" => <emptyTree>::<C String>}).returns(<emptyTree>::<C String>)
    end

    def bar=<<C <todo sym>>>(arg0, &<blk>)
      ::Kernel.raise("Sorbet rewriter pass partially unimplemented")
    end

    ::Sorbet::Private::Static.keep_def(<self>, :"foo")

    ::Sorbet::Private::Static.keep_def(<self>, :"foo=")

    ::Sorbet::Private::Static.keep_def(<self>, :"bar")

    ::Sorbet::Private::Static.keep_def(<self>, :"bar=")
  end

  <emptyTree>::<C Inexact>.new()

  <emptyTree>::<C Inexact>.new({:"foo" => 3, :"bar" => "hey"})

  <emptyTree>::<C Inexact>.new({:"foo" => false, :"quz" => [1, 2, 5]})
end
