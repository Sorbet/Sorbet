class <emptyTree><<C <root>>> < (::<todo sym>)
  ::Sorbet::Private::Static.sig(<self>) do ||
    <self>.params({:"a" => <emptyTree>::<C String>, :"b" => <emptyTree>::<C Integer>, :"c" => <emptyTree>::<C Integer>}).void()
  end

  def foo<<C <todo sym>>>(a, b = <emptyTree>, c = <emptyTree>, &<blk>)
    <emptyTree>
  end

  ::Sorbet::Private::Static.sig(<self>) do ||
    <self>.params({:"a" => <emptyTree>::<C String>, :"b" => <emptyTree>::<C Integer>, :"c" => <emptyTree>::<C Integer>}).returns(<emptyTree>::<C Integer>)
  end

  def foo<defaultArg>1<<C <todo sym>>>(a, b = <emptyTree>, c = <emptyTree>, &<blk>)
    1
  end

  ::Sorbet::Private::Static.sig(<self>) do ||
    <self>.params({:"a" => <emptyTree>::<C String>, :"b" => <emptyTree>::<C Integer>, :"c" => <emptyTree>::<C Integer>}).returns(<emptyTree>::<C Integer>)
  end

  def foo<defaultArg>2<<C <todo sym>>>(a, b = <emptyTree>, c = <emptyTree>, &<blk>)
    2
  end

  <self>.extend(<emptyTree>::<C T>::<C Sig>)

  ::Sorbet::Private::Static.keep_def(<self>, :"foo")

  ::Sorbet::Private::Static.keep_def(<self>, :"foo<defaultArg>1")

  ::Sorbet::Private::Static.keep_def(<self>, :"foo<defaultArg>2")
end
