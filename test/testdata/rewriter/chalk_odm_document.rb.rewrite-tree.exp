class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C MyParentDocument><<C <todo sym>>> < (<emptyTree>::<C Chalk>::<C ODM>::<C Document>)
    ::T::Sig::WithoutRuntime.sig() do ||
      <self>.params({}).returns(<emptyTree>::<C String>)
    end

    def my_parent_method<<C <todo sym>>>(&<blk>)
      @my_parent_method
    end

    ::T::Sig::WithoutRuntime.sig() do ||
      <self>.params({:"arg0" => <emptyTree>::<C String>}).returns(<emptyTree>::<C String>)
    end

    def my_parent_method=<<C <todo sym>>>(arg0, &<blk>)
      ::T.unsafe(::Kernel).raise("Sorbet rewriter pass partially unimplemented")
    end

    <self>.prop(:"my_parent_method", <emptyTree>::<C String>, {:"without_accessors" => true})

    ::Sorbet::Private::Static.keep_def(<self>, :"my_parent_method")

    ::Sorbet::Private::Static.keep_def(<self>, :"my_parent_method=")
  end

  class <emptyTree>::<C MyChildDocument><<C <todo sym>>> < (<emptyTree>::<C MyParentDocument>)
    ::T::Sig::WithoutRuntime.sig() do ||
      <self>.params({}).returns(<emptyTree>::<C Integer>)
    end

    def my_child_method<<C <todo sym>>>(&<blk>)
      ::T.unsafe(::Kernel).raise("Sorbet rewriter pass partially unimplemented")
    end

    ::T::Sig::WithoutRuntime.sig() do ||
      <self>.params({:"arg0" => <emptyTree>::<C Integer>}).returns(<emptyTree>::<C Integer>)
    end

    def my_child_method=<<C <todo sym>>>(arg0, &<blk>)
      ::T.unsafe(::Kernel).raise("Sorbet rewriter pass partially unimplemented")
    end

    <self>.prop(:"my_child_method", <emptyTree>::<C Integer>, {:"without_accessors" => true})

    ::Sorbet::Private::Static.keep_def(<self>, :"my_child_method")

    ::Sorbet::Private::Static.keep_def(<self>, :"my_child_method=")
  end

  <emptyTree>::<C MyParentDocument>.new()

  <emptyTree>::<C MyChildDocument>.new()

  <self>.p(<emptyTree>::<C MyParentDocument>.new({:"my_parent_method" => "hello"}).my_parent_method())

  <self>.p(<emptyTree>::<C MyChildDocument>.new({:"my_child_method" => 42}).my_child_method())
end
