class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C ThingsWhichUsedToBePropSyntax><<C <todo sym>>> < (::<todo sym>)
    ::T::Sig::WithoutRuntime.sig() do ||
      <self>.params({}).returns(<emptyTree>::<C String>)
    end

    def type<<C <todo sym>>>(&<blk>)
      ::Kernel.raise("Sorbet rewriter pass partially unimplemented")
    end

    ::T::Sig::WithoutRuntime.sig() do ||
      <self>.params({:"arg0" => <emptyTree>::<C String>}).returns(<emptyTree>::<C String>)
    end

    def type=<<C <todo sym>>>(arg0, &<blk>)
      ::Kernel.raise("Sorbet rewriter pass partially unimplemented")
    end

    ::T::Sig::WithoutRuntime.sig() do ||
      <self>.params({}).returns(::T::Array.[](<emptyTree>::<C String>))
    end

    def array_of<<C <todo sym>>>(&<blk>)
      ::Kernel.raise("Sorbet rewriter pass partially unimplemented")
    end

    ::T::Sig::WithoutRuntime.sig() do ||
      <self>.params({:"arg0" => ::T::Array.[](<emptyTree>::<C String>)}).returns(::T::Array.[](<emptyTree>::<C String>))
    end

    def array_of=<<C <todo sym>>>(arg0, &<blk>)
      ::Kernel.raise("Sorbet rewriter pass partially unimplemented")
    end

    ::T::Sig::WithoutRuntime.sig() do ||
      <self>.params({}).returns(<emptyTree>::<C Array>)
    end

    def array_of_explicit<<C <todo sym>>>(&<blk>)
      ::Kernel.raise("Sorbet rewriter pass partially unimplemented")
    end

    ::T::Sig::WithoutRuntime.sig() do ||
      <self>.params({:"arg0" => <emptyTree>::<C Array>}).returns(<emptyTree>::<C Array>)
    end

    def array_of_explicit=<<C <todo sym>>>(arg0, &<blk>)
      ::Kernel.raise("Sorbet rewriter pass partially unimplemented")
    end

    ::T::Sig::WithoutRuntime.sig() do ||
      <self>.params({}).returns(<emptyTree>::<C Array>)
    end

    def no_class_arg<<C <todo sym>>>(&<blk>)
      ::Kernel.raise("Sorbet rewriter pass partially unimplemented")
    end

    ::T::Sig::WithoutRuntime.sig() do ||
      <self>.params({}).returns(<emptyTree>::<C T>.proc().params({:"x" => <emptyTree>::<C Integer>}).void())
    end

    def proc_type<<C <todo sym>>>(&<blk>)
      ::Kernel.raise("Sorbet rewriter pass partially unimplemented")
    end

    ::T::Sig::WithoutRuntime.sig() do ||
      <self>.params({:"arg0" => <emptyTree>::<C T>.proc().params({:"x" => <emptyTree>::<C Integer>}).void()}).returns(<emptyTree>::<C T>.proc().params({:"x" => <emptyTree>::<C Integer>}).void())
    end

    def proc_type=<<C <todo sym>>>(arg0, &<blk>)
      ::Kernel.raise("Sorbet rewriter pass partially unimplemented")
    end

    ::Sorbet::Private::Static.keep_def(<self>, :"type")

    ::Sorbet::Private::Static.keep_def(<self>, :"type=")

    <self>.prop(:"object")

    ::Sorbet::Private::Static.keep_def(<self>, :"array_of")

    ::Sorbet::Private::Static.keep_def(<self>, :"array_of=")

    ::Sorbet::Private::Static.keep_def(<self>, :"array_of_explicit")

    ::Sorbet::Private::Static.keep_def(<self>, :"array_of_explicit=")

    class <emptyTree>::<C Mutator><<C <todo sym>>> < ()
      ::T::Sig::WithoutRuntime.sig() do ||
        <self>.params({:"arg0" => <emptyTree>::<C Array>}).returns(<emptyTree>::<C Array>)
      end

      def array_of_explicit=<<C <todo sym>>>(arg0, &<blk>)
        ::Kernel.raise("Sorbet rewriter pass partially unimplemented")
      end

      ::T::Sig::WithoutRuntime.sig() do ||
        <self>.returns(::<root>::<C Chalk>::<C ODM>::<C Mutator>::<C Private>::<C ArrayMutator>.[](::T.untyped()))
      end

      def array_of_explicit<<C <todo sym>>>(&<blk>)
        ::Kernel.raise("Sorbet rewriter pass partially unimplemented")
      end

      ::Sorbet::Private::Static.keep_def(<self>, :"array_of_explicit=")

      ::Sorbet::Private::Static.keep_def(<self>, :"array_of_explicit")
    end

    ::Sorbet::Private::Static.keep_def(<self>, :"no_class_arg")

    class <emptyTree>::<C Mutator><<C <todo sym>>> < ()
      ::T::Sig::WithoutRuntime.sig() do ||
        <self>.params({:"arg0" => <emptyTree>::<C Array>}).returns(<emptyTree>::<C Array>)
      end

      def no_class_arg=<<C <todo sym>>>(arg0, &<blk>)
        ::Kernel.raise("Sorbet rewriter pass partially unimplemented")
      end

      ::T::Sig::WithoutRuntime.sig() do ||
        <self>.returns(::<root>::<C Chalk>::<C ODM>::<C Mutator>::<C Private>::<C ArrayMutator>.[](::T.untyped()))
      end

      def no_class_arg<<C <todo sym>>>(&<blk>)
        ::Kernel.raise("Sorbet rewriter pass partially unimplemented")
      end

      ::Sorbet::Private::Static.keep_def(<self>, :"no_class_arg=")

      ::Sorbet::Private::Static.keep_def(<self>, :"no_class_arg")
    end

    ::Sorbet::Private::Static.keep_def(<self>, :"proc_type")

    ::Sorbet::Private::Static.keep_def(<self>, :"proc_type=")
  end
end
