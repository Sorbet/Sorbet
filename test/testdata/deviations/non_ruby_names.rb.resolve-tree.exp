begin
  class <emptyTree><<constant:<root>>> < ()
    def self.<static-init><<static-init>$109>()
      begin
        begin
          ::RubyTyper.keep_for_ide(::B)
          <emptyTree>
        end
        begin
          ::RubyTyper.keep_for_ide(::A)
          <emptyTree>
        end
        <emptyTree>
      end
    end
  end
  module ::B<<constant:B>> < ()  end
  module ::A<<constant:A>> < ()
    def self.<static-init><<static-init>>()
      begin
        ::RubyTyper.keep_for_ide(::A::B::C)
        <emptyTree>
      end
    end
  end
  class ::A::B::C<<constant:C>> < (::<todo sym>)  end
  <emptyTree>
end
