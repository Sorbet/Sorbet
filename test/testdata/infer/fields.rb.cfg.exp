digraph "fields.rb" {
subgraph "cluster_::Foo#initialize" {
    label = "::Foo#initialize";
    color = blue;
    "bb::Foo#initialize_0" [shape = invhouse];
    "bb::Foo#initialize_1" [shape = parallelogram];

    "bb::Foo#initialize_0" [
        label = "block[id=0]()\l<U @ivar>$3: Integer = alias <U @ivar>\l<U <self>>: Foo = cast(<U <self>>: NilClass, Foo);\l<U <statTemp>>$5: T.class_of(Sorbet::Private::Static) = alias <C <U Sorbet::Private::Static>>\l<U <statTemp>>$6: T.class_of(Integer) = alias <C <U Integer>>\l<U <statTemp>>$4: Sorbet::Private::Static::Void = <U <statTemp>>$5: T.class_of(Sorbet::Private::Static).<U keep_for_typechecking>(<U <statTemp>>$6: T.class_of(Integer))\l<U <castTemp>>$7: Integer(0) = 0\l<U @ivar>$3: Integer = cast(<U <castTemp>>$7: Integer(0), Integer);\l<U <returnMethodTemp>>$2: Integer = <U @ivar>$3\l<U <finalReturn>>: T.noreturn = return <U <returnMethodTemp>>$2: Integer\l<unconditional>\l"
    ];

    "bb::Foo#initialize_0" -> "bb::Foo#initialize_1" [style="bold"];
    "bb::Foo#initialize_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Foo#initialize_1" -> "bb::Foo#initialize_1" [style="bold"];
}

subgraph "cluster_::Foo#foo" {
    label = "::Foo#foo";
    color = blue;
    "bb::Foo#foo_0" [shape = invhouse];
    "bb::Foo#foo_1" [shape = parallelogram];

    "bb::Foo#foo_0" [
        label = "block[id=0]()\l<U @ivar>$4: Integer = alias <U @ivar>\l<U <self>>: Foo = cast(<U <self>>: NilClass, Foo);\l<U @ivar>$4: Integer(2) = 2\l<U @ivar>$4: Integer = \"ss\"\l<U <returnMethodTemp>>$2: Integer = <U @ivar>$4\l<U <finalReturn>>: T.noreturn = return <U <returnMethodTemp>>$2: Integer\l<unconditional>\l"
    ];

    "bb::Foo#foo_0" -> "bb::Foo#foo_1" [style="bold"];
    "bb::Foo#foo_1" [
        label = "block[id=1]()\l<unconditional>\l"
    ];

    "bb::Foo#foo_1" -> "bb::Foo#foo_1" [style="bold"];
}

}

