begin
  ::Sorbet::Private::Static.<U keep_for_ide>(::Examples)
  class ::Examples<<C <U Examples>>> < (::<todo sym>)
    <emptyTree>

    <emptyTree>

    <emptyTree>

    <emptyTree>

    <emptyTree>

    <emptyTree>

    <emptyTree>

    <emptyTree>

    def <U i_like_ifs><<U i_like_ifs>>(<blk>)
      if true
        return 1
      else
        return 2
      end
    end

    def <U i_like_exps><<U i_like_exps>>(<blk>)
      if true
        1
      else
        2
      end
    end

    def <U return_in_one_branch1><<U return_in_one_branch1>>(<blk>)
      if true
        return 1
      else
        2
      end
    end

    def <U return_in_one_branch2><<U return_in_one_branch2>>(<blk>)
      if true
        1
      else
        return 2
      end
    end

    def <U variables><<U variables>>(<blk>)
      begin
        if true
          <U a> = 1
        else
          <U a> = 2
        end
        if false
          <U b> = 1
        else
          <U b> = 2
        end
        <U a>.<U +>(<U b>)
      end
    end

    def <U variables_and_loop><<U variables_and_loop>>(cond, <blk>)
      begin
        if true
          <U a> = 1
        else
          <U a> = 2
        end
        while true
          if <U cond>
            <U b> = 1
          else
            <U b> = 2
          end
        end
        <U b>
      end
    end

    def <U variables_loop_if><<U variables_loop_if>>(cond, <blk>)
      begin
        while true
          if <U cond>
            <U b> = 1
          else
            <U b> = 2
          end
        end
        <U b>
      end
    end

    def <U take_arguments><<U take_arguments>>(i, <blk>)
      if false
        2
      else
        <U i>
      end
    end
  end
  <emptyTree>
end
