begin
  class <emptyTree><<constant:<root>>> < ()
    def self.<static-init><<static-init>$109>()
      begin
        begin
          ::RubyTyper.keep_for_ide(::Mixin1)
          <emptyTree>
        end
        begin
          ::RubyTyper.keep_for_ide(::Mixin2)
          <emptyTree>
        end
        begin
          ::RubyTyper.keep_for_ide(::Parent)
          <emptyTree>
        end
        begin
          ::RubyTyper.keep_for_ide(::Child)
          ::RubyTyper.keep_for_ide(::Parent)
          <emptyTree>
        end
        begin
          ::RubyTyper.keep_for_ide(::MultipleInclude)
          <emptyTree>
        end
        <emptyTree>
      end
    end
  end
  module ::Mixin1<<constant:Mixin1>> < ()  end
  module ::Mixin2<<constant:Mixin2>> < ()  end
  class ::Parent<<constant:Parent>> < (::<todo sym>, ::Mixin1)
    def self.<static-init><<static-init>>()
      ::RubyTyper.keep_for_ide(::Mixin1)
    end
  end
  class ::Child<<constant:Child>> < (::Parent, ::Mixin2)
    def self.<static-init><<static-init>>()
      ::RubyTyper.keep_for_ide(::Mixin2)
    end
  end
  class ::MultipleInclude<<constant:MultipleInclude>> < (::<todo sym>, ::Mixin2, ::Mixin1)
    def self.<static-init><<static-init>>()
      begin
        ::RubyTyper.keep_for_ide(::Mixin2)
        ::RubyTyper.keep_for_ide(::Mixin1)
        <emptyTree>
      end
    end
  end
  <emptyTree>
end
