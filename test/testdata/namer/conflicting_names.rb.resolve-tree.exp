begin
  ::Sorbet::Private::Static.<U keep_for_ide>(::A)
  module ::A<<C <U A>>> < ()
    <emptyTree>

    <emptyTree>

    def <U Foo><<U Foo>>(<blk>)
      <emptyTree>
    end

    def self.<U <static-init>><<U <static-init>>>(<blk>)
      begin
        ::Sorbet::Private::Static.<U keep_for_ide>(::A::Foo)
        <emptyTree>
      end
    end
  end
  class ::A::Foo<<C <U Foo>>> < (::<todo sym>)  end
  <emptyTree>
end
