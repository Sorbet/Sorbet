class <C <U <root>>> < <C <U Object>> () @ (Loc {file=test/testdata/namer/simple.rb start=2:1 end=32:4}, Loc {file=https://github.com/stripe/sorbet/tree/master/bazel-out/host/genfiles/rbi/procs.rbi start=1:1 end=252:4}, Loc {file=https://github.com/stripe/sorbet/tree/master/rbi/light.rbi start=7:1 end=2538:4})
  class <S <C <U <root>>> $1> < <S <C <U Object>> $1> ()
    method <S <C <U <root>>> $1><N <U <static-init>> $3> (<blk>) @ Loc {file=test/testdata/namer/simple.rb start=2:1 end=32:4}
      argument <S <C <U <root>>> $1><N <U <static-init>> $3><blk><block> @ Loc {file=test/testdata/namer/simple.rb start=??? end=???}
  class <C <U ANamespace>> < <C <U Sorbet>><C <U Private>><C <U Static>><C <U ImplicitModuleSuperclass>> () @ Loc {file=test/testdata/namer/simple.rb start=13:1 end=13:18}
    class <C <U ANamespace>><C <U ClassInNamespace>> < <C <U Object>> () @ Loc {file=test/testdata/namer/simple.rb start=17:1 end=17:35}
    class <C <U ANamespace>><S <C <U ClassInNamespace>> $1> < <S <C <U Object>> $1> () @ Loc {file=test/testdata/namer/simple.rb start=17:7 end=17:35}
    class <C <U ANamespace>><C <U ObviousChild>> < <C <U Object>> () @ Loc {file=test/testdata/namer/simple.rb start=14:3 end=14:21}
    class <C <U ANamespace>><S <C <U ObviousChild>> $1> < <S <C <U Object>> $1> () @ Loc {file=test/testdata/namer/simple.rb start=14:9 end=14:21}
  class <S <C <U ANamespace>> $1> < <C <U Module>> () @ Loc {file=test/testdata/namer/simple.rb start=13:8 end=13:18}
    method <S <C <U ANamespace>> $1><U <static-init>> (<blk>) @ Loc {file=test/testdata/namer/simple.rb start=14:3 end=14:21}
      argument <S <C <U ANamespace>> $1><U <static-init>><blk><block> @ Loc {file=test/testdata/namer/simple.rb start=??? end=???}
  class <C <U Child>> < <C <U Parent>> (<C <U Mixin>>) @ Loc {file=test/testdata/namer/simple.rb start=26:1 end=26:21}
  class <S <C <U Child>> $1> < <S <C <U Parent>> $1> () @ Loc {file=test/testdata/namer/simple.rb start=26:7 end=26:12}
    method <S <C <U Child>> $1><U <static-init>> (<blk>) @ Loc {file=test/testdata/namer/simple.rb start=29:3 end=30:6}
      argument <S <C <U Child>> $1><U <static-init>><blk><block> @ Loc {file=test/testdata/namer/simple.rb start=??? end=???}
  class <C <U Mixin>> < <C <U Sorbet>><C <U Private>><C <U Static>><C <U ImplicitModuleSuperclass>> () @ Loc {file=test/testdata/namer/simple.rb start=22:1 end=22:13}
  class <S <C <U Mixin>> $1> < <C <U Module>> () @ Loc {file=test/testdata/namer/simple.rb start=22:8 end=22:13}
  class <C <U NormalClass>> < <C <U Object>> () @ Loc {file=test/testdata/namer/simple.rb start=2:1 end=2:18}
    class <C <U NormalClass>><C <U InnerClass>> < <C <U Object>> () @ Loc {file=test/testdata/namer/simple.rb start=7:3 end=7:19}
    class <C <U NormalClass>><S <C <U InnerClass>> $1> < <S <C <U Object>> $1> () @ Loc {file=test/testdata/namer/simple.rb start=7:9 end=7:19}
    class <C <U NormalClass>><C <U InnerModule>> < <C <U Sorbet>><C <U Private>><C <U Static>><C <U ImplicitModuleSuperclass>> () @ Loc {file=test/testdata/namer/simple.rb start=9:3 end=9:21}
    class <C <U NormalClass>><S <C <U InnerModule>> $1> < <C <U Module>> () @ Loc {file=test/testdata/namer/simple.rb start=9:10 end=9:21}
    method <C <U NormalClass>><U normal_method> (<blk>) @ Loc {file=test/testdata/namer/simple.rb start=3:3 end=3:20}
      argument <C <U NormalClass>><U normal_method><blk><block> @ Loc {file=test/testdata/namer/simple.rb start=??? end=???}
  class <S <C <U NormalClass>> $1> < <S <C <U Object>> $1> () @ Loc {file=test/testdata/namer/simple.rb start=2:7 end=2:18}
    method <S <C <U NormalClass>> $1><U <static-init>> (<blk>) @ Loc {file=test/testdata/namer/simple.rb start=2:1 end=2:18}
      argument <S <C <U NormalClass>> $1><U <static-init>><blk><block> @ Loc {file=test/testdata/namer/simple.rb start=??? end=???}
    method <S <C <U NormalClass>> $1><U normal_static_method> (<blk>) @ Loc {file=test/testdata/namer/simple.rb start=5:3 end=5:32}
      argument <S <C <U NormalClass>> $1><U normal_static_method><blk><block> @ Loc {file=test/testdata/namer/simple.rb start=??? end=???}
  class <C <U OtherMixin>> < <C <U Sorbet>><C <U Private>><C <U Static>><C <U ImplicitModuleSuperclass>> () @ Loc {file=test/testdata/namer/simple.rb start=24:1 end=24:18}
  class <S <C <U OtherMixin>> $1> < <C <U Module>> () @ Loc {file=test/testdata/namer/simple.rb start=24:8 end=24:18}
  class <C <U Parent>> < <C <U Object>> () @ Loc {file=test/testdata/namer/simple.rb start=20:1 end=20:13}
  class <S <C <U Parent>> $1> < <S <C <U Object>> $1> () @ Loc {file=test/testdata/namer/simple.rb start=20:7 end=20:13}

