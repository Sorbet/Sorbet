begin
  <emptyTree>
  class <emptyTree><<C <root>>> < (::<todo sym>)
    ::Sorbet::Private::Static.keep_class_method_def(<self>, :"<static-init>")

    def self.<static-init><<static-init>$CENSORED>(<blk>)
      begin
        $a = 1
        begin
          <emptyTree>
          ::Sorbet::Private::Static.keep_for_ide(::A)
          <emptyTree>
        end
        <emptyTree>
      end
    end
  end
  class ::A<<C A>> < (::<todo sym>)
    ::Sorbet::Private::Static.keep_class_method_def(<self>, :"<static-init>")

    def self.<static-init>(<blk>)
      begin
        $b = 2
        $a
        ::Sorbet::Private::Static.keep_method_def(<self>, :"meth")
        <emptyTree>
      end
    end

    def meth(<blk>)
      [$a, $b, $c]
    end
  end
  <emptyTree>
end
