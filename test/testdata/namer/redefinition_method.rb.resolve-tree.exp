begin
  ::Sorbet::Private::Static.<U keep_for_ide>(::Main)
  class ::Main<<C <U Main>>> < (::<todo sym>)
    <emptyTree>

    <emptyTree>

    <emptyTree>

    <emptyTree>

    def <U foo><<M <U foo> $1>>(a, <blk>)
      <U a>
    end

    def <U foo><<M <U foo> $2>>(a, b, <blk>)
      <emptyTree>
    end

    def <U foo><<U foo>>(a, b, c, <blk>)
      <emptyTree>
    end

    def self.<U <static-init>><<U <static-init>>>(<blk>)
      <U <self>>.<U sig>() do ||
        <U <self>>.<U params>({:"a" => ::Integer}).<U returns>(::Integer)
      end
    end
  end
  <emptyTree>
end
