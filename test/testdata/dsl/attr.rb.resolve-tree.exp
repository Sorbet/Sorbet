begin
  ::Sorbet::Private::Static.keep_for_ide(::TestAttr)
  class ::TestAttr<<C TestAttr>> < (::<todo sym>)
    <self>.sig() do ||
      <self>.void()
    end

    def initialize<initialize>(<blk>)
      begin
        @v1 = begin
          ::Sorbet::Private::Static.keep_for_typechecking(::Integer)
          T.let(0, Integer)
        end
        @v2 = begin
          ::Sorbet::Private::Static.keep_for_typechecking(::String)
          T.let("", String)
        end
        @v6 = begin
          ::Sorbet::Private::Static.keep_for_typechecking(::String)
          T.let("", String)
        end
      end
    end

    <self>.sig() do ||
      <self>.returns(::Integer)
    end

    def v1<v1>(<blk>)
      @v1
    end

    <self>.sig() do ||
      <self>.params({:"v1" => ::Integer}).returns(::Integer)
    end

    def v1=<v1=>(v1, <blk>)
      @v1 = v1
    end

    <self>.sig() do ||
      <self>.returns(::String)
    end

    def v2<v2>(<blk>)
      @v2
    end

    <self>.sig() do ||
      <self>.params({:"v2" => ::String}).returns(::String)
    end

    def v2=<v2=>(v2, <blk>)
      @v2 = v2
    end

    <self>.sig() do ||
      <self>.returns(::String)
    end

    def v3<v3>(<blk>)
      @v3
    end

    def v4=<v4=>(v4, <blk>)
      @v4 = v4
    end

    def v5=<v5=>(v5, <blk>)
      @v5 = v5
    end
  end
end
