Read: {"jsonrpc":"2.0", "method":"initialize", "params":{"processId":52385, "rootPath":"/Users/nelhage/stripe/pay-server", "rootUri":"file:///Users/nelhage/stripe/pay-server", "capabilities":{"workspace":{"applyEdit":true, "executeCommand":{"dynamicRegistration":true}, "workspaceFolders":true}, "textDocument":{"synchronization":{"willSave":true, "didSave":true, "willSaveWaitUntil":true}, "documentSymbol":{"symbolKind":{"valueSet":[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]}, "hierarchicalDocumentSymbolSupport":true}, "formatting":{"dynamicRegistration":true}, "codeAction":{"dynamicRegistration":true}}}, "initializationOptions":null}, "id":1}
Write: {"jsonrpc":"2.0","id":1,"requestMethod":"initialize","result":{"capabilities":{"textDocumentSync":1,"hoverProvider":true,"completionProvider":{"triggerCharacters":["."]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"referencesProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true}}}
Read: {"jsonrpc":"2.0", "method":"initialized", "params":{}}
Read: {"jsonrpc":"2.0", "method":"textDocument/didOpen", "params":{"textDocument":{"uri":"file:///Users/nelhage/stripe/pay-server/COMPLETE.rb", "languageId":"Ruby", "version":0, "text":"# typed: true\nclass TestCompletion\n  def method_a(x, y); end\n  def method_b(x); end\nend\n\nTestCompletion.new.m\n"}}}
Read: {"jsonrpc":"2.0", "method":"textDocument/completion", "params":{"textDocument":{"uri":"file:///Users/nelhage/stripe/pay-server/COMPLETE.rb"}, "position":{"line":6, "character":20}}, "id":88}
Write: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/nelhage/stripe/pay-server/COMPLETE.rb","diagnostics":[{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":20}},"severity":1,"code":7003,"message":"Method `m` does not exist on `TestCompletion`","relatedInformation":[{"location":{"uri":"https://srb.help/7003","range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}}},"message":"Click for more information on this error."}]}]}}
Write: {"jsonrpc":"2.0","id":88,"requestMethod":"textDocument/completion","result":{"isIncomplete":false,"items":[{"label":"BigDecimal","kind":3,"detail":"sig {params(initial: T.any(Integer, Float, Rational, BigDecimal, String), digits: Integer).returns(BigDecimal)}","insertText":"BigDecimal","insertTextFormat":1},{"label":"Complex","kind":3,"detail":"sig {params(x: T.any(Numeric, String), y: T.any(Numeric, String)).returns(Complex)}","insertText":"Complex","insertTextFormat":1},{"label":"Complex","kind":3,"detail":"sig {params(x: T.untyped, y: T.untyped).returns(T.untyped)}","insertText":"Complex","insertTextFormat":1},{"label":"Complex","kind":3,"detail":"sig {params(x: String).returns(Complex)}","insertText":"Complex","insertTextFormat":1},{"label":"__method__","kind":3,"detail":"sig {returns(T.nilable(Symbol))}","insertText":"__method__","insertTextFormat":1},{"label":"define_singleton_method","kind":3,"detail":"sig {params(symbol: T.any(Symbol, String), method: T.any(Proc, Method, UnboundMethod)).returns(Symbol)}","insertText":"define_singleton_method","insertTextFormat":1},{"label":"define_singleton_method","kind":3,"detail":"sig {params(symbol: T.untyped, method: T.untyped, blk: T.untyped).returns(T.untyped)}","insertText":"define_singleton_method","insertTextFormat":1},{"label":"define_singleton_method","kind":3,"detail":"sig {params(symbol: T.any(Symbol, String), blk: BasicObject).returns(Symbol)}","insertText":"define_singleton_method","insertTextFormat":1},{"label":"enum_for","kind":3,"detail":"sig {params(method: Symbol, args: BasicObject).returns(T::Enumerator[T.untyped])}","insertText":"enum_for","insertTextFormat":1},{"label":"enum_for","kind":3,"detail":"sig {params(method: T.untyped, args: T.untyped, blk: T.untyped).returns(T.untyped)}","insertText":"enum_for","insertTextFormat":1},{"label":"enum_for","kind":3,"detail":"sig {params(method: Symbol, args: BasicObject, blk: BasicObject).returns(T::Enumerator[T.untyped])}","insertText":"enum_for","insertTextFormat":1},{"label":"format","kind":3,"detail":"sig {params(format: String, args: BasicObject).returns(String)}","insertText":"format","insertTextFormat":1},{"label":"lambda","kind":3,"detail":"sig {params(blk: BasicObject).returns(Proc)}","insertText":"lambda","insertTextFormat":1},{"label":"method","kind":3,"detail":"sig {params(arg0: Symbol).returns(Method)}","insertText":"method","insertTextFormat":1},{"label":"method_a","kind":3,"detail":"sig {params(x: T.untyped, y: T.untyped).returns(T.untyped)}","insertText":"method_a","insertTextFormat":1},{"label":"method_b","kind":3,"detail":"sig {params(x: T.untyped).returns(T.untyped)}","insertText":"method_b","insertTextFormat":1},{"label":"methods","kind":3,"detail":"sig {params(regular: T::Boolean).returns(T::Array[Symbol])}","insertText":"methods","insertTextFormat":1},{"label":"private_methods","kind":3,"detail":"sig {params(all: T::Boolean).returns(T::Array[Symbol])}","insertText":"private_methods","insertTextFormat":1},{"label":"protected_methods","kind":3,"detail":"sig {params(all: T::Boolean).returns(T::Array[Symbol])}","insertText":"protected_methods","insertTextFormat":1},{"label":"public_method","kind":3,"detail":"sig {params(arg0: Symbol).returns(Method)}","insertText":"public_method","insertTextFormat":1},{"label":"public_methods","kind":3,"detail":"sig {params(all: T::Boolean).returns(T::Array[Symbol])}","insertText":"public_methods","insertTextFormat":1},{"label":"remove_instance_variable","kind":3,"detail":"sig {params(arg0: Symbol).returns(T.untyped)}","insertText":"remove_instance_variable","insertTextFormat":1},{"label":"singleton_method","kind":3,"detail":"sig {params(arg0: Symbol).returns(Method)}","insertText":"singleton_method","insertTextFormat":1},{"label":"singleton_methods","kind":3,"detail":"sig {params(all: T::Boolean).returns(T::Array[Symbol])}","insertText":"singleton_methods","insertTextFormat":1},{"label":"system","kind":3,"detail":"sig {params(args: String).returns(T.nilable(T::Boolean))}","insertText":"system","insertTextFormat":1},{"label":"to_enum","kind":3,"detail":"sig {params(method: Symbol, args: BasicObject).returns(T::Enumerator[T.untyped])}","insertText":"to_enum","insertTextFormat":1},{"label":"to_enum","kind":3,"detail":"sig {params(method: T.untyped, args: T.untyped, blk: T.untyped).returns(T.untyped)}","insertText":"to_enum","insertTextFormat":1},{"label":"to_enum","kind":3,"detail":"sig {params(method: Symbol, args: BasicObject, blk: BasicObject).returns(T::Enumerator[T.untyped])}","insertText":"to_enum","insertTextFormat":1}]}}
