suggest_t_unsafe.rb:6: Method `[]` does not exist on `NilClass` component of `T.nilable(String)` https://srb.help/7003
     6 |foo[0]
        ^^^^^^
  Got T.nilable(String) originating from:
    suggest_t_unsafe.rb:5:
     5 |foo = T.let(nil, T.nilable(String))
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    suggest_t_unsafe.rb:6: Replaced with `T.unsafe(foo)`
     6 |foo[0]
        ^^^

suggest_t_unsafe.rb:8: Expected `String` but found `T.nilable(String)` for argument `arg0` https://srb.help/7002
     8 |"hi" + foo
        ^^^^^^^^^^
  Expected `String` for argument `arg0` of method `String#+`:
    https://github.com/sorbet/sorbet/tree/master/rbi/core/string.rbi#L68:
    68 |        arg0: String,
                ^^^^
  Got `T.nilable(String)` originating from:
    suggest_t_unsafe.rb:5:
     5 |foo = T.let(nil, T.nilable(String))
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    suggest_t_unsafe.rb:8: Replaced with `T.unsafe(foo)`
     8 |"hi" + foo
               ^^^

suggest_t_unsafe.rb:11: Method `even?` does not exist on `String` component of `T.any(Integer, String)` https://srb.help/7003
    11 |bar.even?
        ^^^^^^^^^
  Got T.any(Integer, String) originating from:
    suggest_t_unsafe.rb:10:
    10 |bar = T.let(1, T.any(Integer, String))
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    suggest_t_unsafe.rb:11: Replaced with `T.unsafe(bar)`
    11 |bar.even?
        ^^^

suggest_t_unsafe.rb:13: Expected `String` but found `Integer(1)` for argument `arg0` https://srb.help/7002
    13 |"hi" + 1
               ^
  Expected `String` for argument `arg0` of method `String#+`:
    https://github.com/sorbet/sorbet/tree/master/rbi/core/string.rbi#L68:
    68 |        arg0: String,
                ^^^^
  Got `Integer(1)` originating from:
    suggest_t_unsafe.rb:13:
    13 |"hi" + 1
               ^
  Autocorrect: Done
    suggest_t_unsafe.rb:13: Replaced with `T.unsafe(1)`
    13 |"hi" + 1
               ^

suggest_t_unsafe.rb:15: Method `even?` does not exist on `NilClass` component of `T.nilable(Integer)` https://srb.help/7003
    15 |T::Array[T.nilable(Integer)].new.map(&:even?)
                                              ^^^^^^
  Got T.nilable(Integer) originating from:
    suggest_t_unsafe.rb:15:
    15 |T::Array[T.nilable(Integer)].new.map(&:even?)
                                              ^
  Autocorrect: Done
    suggest_t_unsafe.rb:15: Replaced with ` {|x| T.unsafe(x).even?}`
    15 |T::Array[T.nilable(Integer)].new.map(&:even?)
                                            ^^^^^^^^^
Errors: 5

--------------------------------------------------------------------------

# typed: true

def custom_wrapper(arg0); end

foo = T.let(nil, T.nilable(String))
T.unsafe(foo)[0]

"hi" + T.unsafe(foo)

bar = T.let(1, T.any(Integer, String))
T.unsafe(bar).even?

"hi" + T.unsafe(1)

T::Array[T.nilable(Integer)].new.map {|x| T.unsafe(x).even?}

--------------------------------------------------------------------------

suggest_t_unsafe.rb:6: Method `[]` does not exist on `NilClass` component of `T.nilable(String)` https://srb.help/7003
     6 |foo[0]
        ^^^^^^
  Got T.nilable(String) originating from:
    suggest_t_unsafe.rb:5:
     5 |foo = T.let(nil, T.nilable(String))
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    suggest_t_unsafe.rb:6: Replaced with `custom_wrapper(foo)`
     6 |foo[0]
        ^^^

suggest_t_unsafe.rb:8: Expected `String` but found `T.nilable(String)` for argument `arg0` https://srb.help/7002
     8 |"hi" + foo
        ^^^^^^^^^^
  Expected `String` for argument `arg0` of method `String#+`:
    https://github.com/sorbet/sorbet/tree/master/rbi/core/string.rbi#L68:
    68 |        arg0: String,
                ^^^^
  Got `T.nilable(String)` originating from:
    suggest_t_unsafe.rb:5:
     5 |foo = T.let(nil, T.nilable(String))
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    suggest_t_unsafe.rb:8: Replaced with `custom_wrapper(foo)`
     8 |"hi" + foo
               ^^^

suggest_t_unsafe.rb:11: Method `even?` does not exist on `String` component of `T.any(Integer, String)` https://srb.help/7003
    11 |bar.even?
        ^^^^^^^^^
  Got T.any(Integer, String) originating from:
    suggest_t_unsafe.rb:10:
    10 |bar = T.let(1, T.any(Integer, String))
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Autocorrect: Done
    suggest_t_unsafe.rb:11: Replaced with `custom_wrapper(bar)`
    11 |bar.even?
        ^^^

suggest_t_unsafe.rb:13: Expected `String` but found `Integer(1)` for argument `arg0` https://srb.help/7002
    13 |"hi" + 1
               ^
  Expected `String` for argument `arg0` of method `String#+`:
    https://github.com/sorbet/sorbet/tree/master/rbi/core/string.rbi#L68:
    68 |        arg0: String,
                ^^^^
  Got `Integer(1)` originating from:
    suggest_t_unsafe.rb:13:
    13 |"hi" + 1
               ^
  Autocorrect: Done
    suggest_t_unsafe.rb:13: Replaced with `custom_wrapper(1)`
    13 |"hi" + 1
               ^

suggest_t_unsafe.rb:15: Method `even?` does not exist on `NilClass` component of `T.nilable(Integer)` https://srb.help/7003
    15 |T::Array[T.nilable(Integer)].new.map(&:even?)
                                              ^^^^^^
  Got T.nilable(Integer) originating from:
    suggest_t_unsafe.rb:15:
    15 |T::Array[T.nilable(Integer)].new.map(&:even?)
                                              ^
  Autocorrect: Done
    suggest_t_unsafe.rb:15: Replaced with ` {|x| custom_wrapper(x).even?}`
    15 |T::Array[T.nilable(Integer)].new.map(&:even?)
                                            ^^^^^^^^^
Errors: 5

--------------------------------------------------------------------------

# typed: true

def custom_wrapper(arg0); end

foo = T.let(nil, T.nilable(String))
custom_wrapper(foo)[0]

"hi" + custom_wrapper(foo)

bar = T.let(1, T.any(Integer, String))
custom_wrapper(bar).even?

"hi" + custom_wrapper(1)

T::Array[T.nilable(Integer)].new.map {|x| custom_wrapper(x).even?}
