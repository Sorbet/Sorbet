----- test/cli/incremental-resolver/type-member.rb ---------------------
No errors! Great job.
----- test/cli/incremental-resolver/type-template.rb ---------------------
No errors! Great job.
----- test/cli/incremental-resolver/expect-failures/abstract_impl.rb ---------------------
test/cli/incremental-resolver/expect-failures/abstract_impl.rb:5: Malformed `sig`. Type not specified for argument `foo` https://srb.help/5003
     5 |  def foo(*foo)end
                   ^^^
    test/cli/incremental-resolver/expect-failures/abstract_impl.rb:4: Signature
     4 |  sig { overridable.void }
          ^^^^^^^^^^^^^^^^^^^^^^^^

test/cli/incremental-resolver/expect-failures/abstract_impl.rb:126: Implementation of abstract method `A#foo` must accept *`foo` https://srb.help/5035
     126 | def foo; end
           ^^^^^^^
    test/cli/incremental-resolver/expect-failures/abstract_impl.rb:123: Base method defined here
     123 |  def foo(*foo)end
            ^^^^^^^^^^^^^
Errors: 2
----- test/cli/incremental-resolver/expect-failures/constant_override.rb ---------------------
test/cli/incremental-resolver/expect-failures/constant_override.rb:3: Redefining constant `B` https://srb.help/4012
     3 |module B
     4 |  extend T::Sig
     5 |  sig { returns(T.all(B,T)) }
     6 |  def foo; T.unsafe(nil); end
     7 |end
    test/cli/incremental-resolver/expect-failures/constant_override.rb:2: Previous definition
     2 |B = e
        ^

test/cli/incremental-resolver/expect-failures/constant_override.rb:110: Redefining constant `B` https://srb.help/4012
     110 |B = e
          ^^^^^
    test/cli/incremental-resolver/expect-failures/constant_override.rb:19: Previous definition
    19 |
    20 |
    21 |
    22 |
    23 |
    24 |
    25 |
    26 |
    27 |

test/cli/incremental-resolver/expect-failures/constant_override.rb:111: Redefining constant `B` https://srb.help/4012
     111 |module B
     112 |  extend T::Sig
     113 |  sig { returns(T.all(B,T)) }
     114 |  def foo; T.unsafe(nil); end
     115 |end
    test/cli/incremental-resolver/expect-failures/constant_override.rb:110: Previous definition
     110 |B = e
          ^

test/cli/incremental-resolver/expect-failures/constant_override.rb:110: Method `e` does not exist on `T.class_of(<root>)` https://srb.help/7003
     110 |B = e
              ^
Errors: 4
----- test/cli/incremental-resolver/expect-failures/multiple_sigs.rb ---------------------
test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:2: Parse Error: unexpected token: syntax error https://srb.help/2001
     2 |2sig {}
         ^^^

test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:2: Unused type annotation. No method def before next annotation https://srb.help/5040
     2 |2sig {}
         ^^^^^^
    test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:3: Type annotation that will be used instead
     3 |sig{}
        ^^^^^

test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:2: To use `sig`, this file must declare an explicit `# typed:` sigil (found: none). If you're not sure which one to use, start with `# typed: false` https://srb.help/5038
     2 |2sig {}
         ^^^^^^

test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:2: Malformed `sig`: No return type specified. Specify one with .returns() https://srb.help/5003
     2 |2sig {}
         ^^^^^^

test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:3: Malformed `sig`: No return type specified. Specify one with .returns() https://srb.help/5003
     3 |sig{}
        ^^^^^

test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:37: Parse Error: unexpected token: syntax error https://srb.help/2001
    37 |2sig {}
         ^^^

test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:37: Unused type annotation. No method def before next annotation https://srb.help/5040
    37 |2sig {}
         ^^^^^^
    test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:38: Type annotation that will be used instead
    38 |sig{}
        ^^^^^

test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:37: To use `sig`, this file must declare an explicit `# typed:` sigil (found: none). If you're not sure which one to use, start with `# typed: false` https://srb.help/5038
    37 |2sig {}
         ^^^^^^

test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:37: Malformed `sig`: No return type specified. Specify one with .returns() https://srb.help/5003
    37 |2sig {}
         ^^^^^^

test/cli/incremental-resolver/expect-failures/multiple_sigs.rb:38: Malformed `sig`: No return type specified. Specify one with .returns() https://srb.help/5003
    38 |sig{}
        ^^^^^
Errors: 10
