# There are two reasons we intentionally put everything we can on mac machine:
#  - our mac machine has 12 cores, while linux one has 4 cores.
#  - we use macs for development thus we want to make sure all scripts run there

steps:

# Basic Phase - Run super fast things and things that commonly catch bugs
  - label: ":linux: linters.sh"
    command: .buildkite/linters.sh
    agents:
      os: linux
      queue: elastic
    plugins:
      - docker#v3.2.0:
          image: "darkdimius/sorbet-build-image:latest"
          workdir: /app
          init: true
          propagate-environment: true
          volumes:
            - "/usr/local/var/bazelcache:/usr/local/var/bazelcache"

  - label: ":mac: test-static-sanitized.sh"
    command: .buildkite/test-static-sanitized.sh
    agents:
      os: mac

  - label: ":linux: test-static-sanitized.sh"
    command: .buildkite/test-static-sanitized.sh
    agents:
      os: linux
      queue: elastic
    plugins:
      - docker#v3.2.0:
          image: "darkdimius/sorbet-build-image:latest"
          workdir: /app
          init: true
          propagate-environment: true
          volumes:
            - "/usr/local/var/bazelcache:/usr/local/var/bazelcache"
  - wait: ~

# Build Phase - Build all our artifacts
  - label: ":linux: build-website.sh"
    command: .buildkite/build-website.sh
    artifact_paths: _out_/**/*
    agents:
      os: linux
      queue: elastic
    plugins:
      - docker#v3.2.0:
          image: "darkdimius/sorbet-build-image:latest"
          workdir: /app
          init: true
          propagate-environment: true
          volumes:
            - "/usr/local/var/bazelcache:/usr/local/var/bazelcache"

  - label: ":linux: build-sorbet-runtime.sh"
    command: .buildkite/build-sorbet-runtime.sh
    artifact_paths: _out_/**/*
    agents:
      os: linux
      queue: elastic
    plugins:
      - docker#v3.2.0:
          image: "darkdimius/sorbet-build-image:latest"
          workdir: /app
          init: true
          propagate-environment: true
          volumes:
            - "/usr/local/var/bazelcache:/usr/local/var/bazelcache"

  - label: ":mac: build-static-release.sh"
    command: .buildkite/build-static-release.sh
    artifact_paths: _out_/**/*
    agents:
      os: mac
  - label: ":mac: build-emscripten.sh"
    command: .buildkite/build-emscripten.sh
    artifact_paths: _out_/**/*
    agents:
      os: mac
  - label: ":linux: build-static-release.sh"
    command: .buildkite/build-static-release.sh
    artifact_paths: _out_/**/*
    agents:
      os: linux
      queue: elastic
    plugins:
      - docker#v3.2.0:
          image: "darkdimius/sorbet-build-image:latest"
          workdir: /app
          init: true
          propagate-environment: true
          volumes:
            - "/usr/local/var/bazelcache:/usr/local/var/bazelcache"
  - wait: ~

# Test Sorbet Gem Phase - Its own phase because it relies on the gem build built
    # TODO(jez) Test on linux
  - label: ":mac: test-sorbet-gem.sh"
    command: .buildkite/test-sorbet-gem.sh
    agents:
      os: mac
  - wait: ~

# Deploy Phase - Send the artifacts to the world
  - label: ":linux: publish.sh"
    command: .buildkite/publish.sh
    agents:
      os: linux
  - wait: ~

# Success Phase - Allow the PR to be merged
  - label: "All tests and builds succeeded"
    command: .buildkite/all-succeeded.sh
  - wait: ~

# Optional Phase - Run optional things
  - block: "Run optional code coverage"
  - wait: ~
  - label: ":linux: coverage-static-sanitized.sh"
    command: .buildkite/coverage-static-sanitized.sh
    artifact_paths: _out_/**/*
    retry:
      automatic: true
    agents:
      os: linux
      queue: elastic
    plugins:
      - docker#v3.2.0:
          image: "darkdimius/sorbet-build-image:latest"
          workdir: /app
          init: true
          propagate-environment: true
          volumes:
            - "/usr/local/var/bazelcache:/usr/local/var/bazelcache"
